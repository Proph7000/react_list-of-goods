{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","App","state","NONE","className","type","classNames","this","onClick","setState","map","product","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC/C,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,OAASH,EAAGG,UAWjD,OAJIR,GACFC,EAAaQ,UAGRR,G,SAlCJN,K,eAAAA,E,mBAAAA,E,iBAAAA,M,KA0CE,IAAMe,EAAb,4MACEC,MAAyB,CACvBZ,SAAUJ,EAASiB,KACnBZ,YAAY,GAHhB,EAMEF,MAAQD,EAAkBD,EAAiB,EAAKe,OANlD,4CAQE,WAAU,IAAD,OACP,OACE,sBAAKE,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYC,KAAKL,MAAMZ,WAAaJ,EAASO,UAGjDe,QAAS,kBAAM,EAAKC,SAAS,CAAEnB,SAAUJ,EAASO,WATpD,iCAcA,wBACEW,UAAWE,IACT,SACA,aACA,CACE,WAAYC,KAAKL,MAAMZ,WAAaJ,EAASY,SAGjDO,KAAK,SACLG,QAAS,kBAAM,EAAKC,SAAS,CAAEnB,SAAUJ,EAASY,UATpD,4BAcA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAaC,KAAKL,MAAMX,aAG5BiB,QAAS,kBAAM,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACrCX,YAAaW,EAAMX,gBAVvB,sBAiBEgB,KAAKL,MAAMX,YAAcgB,KAAKL,MAAMZ,WAAaJ,EAASiB,OAE1D,wBACEE,KAAK,SACLD,UAAU,4BACVI,QAAS,kBAAM,EAAKC,SAAS,CAC3BnB,SAAUJ,EAASiB,KACnBZ,YAAY,KALhB,sBAaJ,6BACE,6BACGgB,KAAKlB,MAAMqB,KAAI,SAACC,GAAD,OACd,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA3EtC,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3adcb60c.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'default',\n  ALPABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  goods = getReorderedGoods(goodsFromServer, this.state);\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': this.state.sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={() => this.setState({ sortType: SortType.ALPABET })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            className={classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': this.state.sortType !== SortType.LENGTH,\n              },\n            )}\n            type=\"button\"\n            onClick={() => this.setState({ sortType: SortType.LENGTH })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              {\n                'is-light': !this.state.isReversed,\n              },\n            )}\n            onClick={() => this.setState(state => ({\n              isReversed: !state.isReversed,\n            }))}\n          >\n            Reverse\n          </button>\n\n          {(\n            this.state.isReversed || this.state.sortType !== SortType.NONE\n          ) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.setState({\n                sortType: SortType.NONE,\n                isReversed: false,\n              })}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {this.goods.map((product) => (\n              <li data-cy=\"Good\" key={product}>\n                {product}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}